U1 &FUNCTIONALITY&                                                         
AS Dieses BAPI legt eine Klassenhierarchie an, deren Wurzel die Instanz    
   ist. Die beteiligten Klassen müssen alle existieren. Bewertungen der    
   Zuordnungen können nicht vorgenommen werden, da dies zu große           
   Datenmengen verursachen würde.                                          
AS Die Instanz ist durch den Klassennamen ('ClassNum') und die Klassenart  
   ('ClassType') definiert, optional können ein Stichtag ('KeyDate') und   
   eine Änderungsnummer ('ChangeNumber') angegeben werden.                 
AS Die anzulegende Struktur wird in der Tabelle 'SubtreeList' übergeben.   
   Darin müssen die Felder 'ClassName' (Klasse), 'ChildName'               
   (Unterklasse), 'Level' (Hierarchieebene), 'Link' (Kennzeichen für       
   Mehrfachklassifizierung) und 'Status' korrekt gefüllt sein. Die Felder  
   'RightName' und 'LeftName' sind hier irrelevant, das Feld 'Description' 
   wird ignoriert.                                                         
AS In 'ClassName' steht die Klasse, der die Klasse aus 'ChildName'         
   zugeordnet werden soll. Der Klassifizierungsstatus wird in 'Status'     
   angegeben. Die Hierarchieebenen ('Level') sind prinzipiell beliebig, es 
   wird jedoch empfohlen, der Instanz die Ebene 1 zuzuordnen, ihren        
   Unterklassen die Ebene 2 usw. Auf jeden Fall muß die Ebene einer Klasse 
   höher sein als diejenige der ihr übergeordneten Klasse. Wenn            
   Mehrfachklassifizierung vorkommt, muß das Feld 'Link' gesetzt werden:   
   Bei der Zuordnung zu einer zweiten Oberklasse hat dieses Feld den       
   Eintrag 'X'. Die Reihenfolge der Tabelleneinträge ist unerheblich.      
AS Zuerst wird eine Konsistenzprüfung der Struktur vorgenommen. Wenn dabei 
   Fehler erkannt werden, wird nichts angelegt, das BAPI gibt lediglich    
   das Fehlerprotokoll zurück. Geprüft werden die folgenden Regeln:        
N1 Die Instanz ist die einzige Klasse ohne Vorgänger.                      
N1 Jede verwendete Klasse existiert und ist gültig.                        
N1 Jede Zuordnung ist eindeutig (es gibt keinen anderen Eintrag, der unter 
   'ClassName' und 'ChildName' die selben Klassen aufweist).               
N1 Jede Klasse, die im Feld 'ChildName' steht, kommt auch im Feld          
   'ClassName' vor. (Die Klassen, die keine Unterklassen besitzen, haben   
   einen Eintrag mit leeren 'ChildName'-Feld.)                             
N1 Eine Klasse hat immer dieselbe Hierarchiestufe ('Level').               
N1 Die Hierarchiestufe einer Klasse ist größer als die ihrer               
   Vorgängerklasse (derjenigen ohne das 'Link'-Kennzeichen).               
N1 Die Hierarchie ist rekursionsfrei, d.h. eine Klasse ist nicht           
   (indirekt) sich selbst zugeordnet. Dies gilt sowohl innerhalb der       
   anzulegenden Struktur als auch für alle übergeordneten Klassen der      
   Instanz.                                                                
N1 Zu jeder Klasse im Feld 'ChildName' gibt es genau einen Eintrag ohne    
   das 'Link'-Kennzeichen.                                                 
AS                                                                         
AS Die Ergebnisse werden in der Tabelle Return protokolliert. Darin sind   
   entweder nur die Fehlermeldungen der Konsistenzprüfung enthalten oder   
   die Fehler-/ Erfolgsmeldungen beim Anlegen der einzelnen Zuordnungen.   
   Im ersten Fall enthält jeder Eintrag die Information, die nötig ist, um 
   den Fehler eindeutig zu identifizieren. Im zweiten Fall gibt es zu      
   jeder Zuordnung eine Meldung 'Die Zuordnung der Klasse X zur Klasse Y   
   wurde (nicht) angelegt.' mit dem entsprechenden Typ 'E' oder 'S'. Vor   
   dieser Meldung stehen die detaillierteren Meldungen zu den              
   Fehlerursachen, allerdings ohne Identifikation der konkreten Zuordnung. 
U1 &EXAMPLE&                                                               
AS Die Instanz sei Klasse1.                                                
/  Sie soll die Unterklassen Klasse2 und Klasse3 enthalten. Klasse2 habe   
   die Unterklasse Klasse4, diese die Unterklasse Klasse5. Klasse5 sei     
   außerdem zu Klasse3 zugeordnet. Die Tabelle sollte dann folgendermaßen  
   aussehen (einige Felder sind nicht aufgeführt):                         
AS ClassName      ChildName       Level     Link                           
/  ------------------------------------------------------------            
/  Klasse1             Klasse2                 1                           
/  Klasse1             Klasse3                 1                           
/  Klasse2             Klasse4                 2                           
/  Klasse3             Klasse5                 2          X                
/  Klasse4             Klasse5                 3                           
U1 &HINTS&                                                                 
AS Es ist notwendig, die Tabelle 'Return' genau auszuwerten, da es bei     
   diesem BAPI im allgemeinen kein entweder 'richtiges' oder 'falsches'    
   Ergebnis gibt. Wenn man wissen will, was tatsächlich angelegt wurde,    
   kann man sich auch über das BAPI Class.GetSubstructure die angelegte    
   Hierarchie ausgeben lassen.                                             
AS Große Hierarchien verschlechtern die Performance deutlich! Wenn nur     
   eine einzige Beziehung angelegt werden soll, sollte unbedingt das BAPI  
   Class.CreateSubclassAllocation benutzt werden!                          
AS Dieses BAPI führt keine Änderungen auf der Datenbank durch, dazu muß    
   anschließend das BAPI BapiService.TransactionCommit aufgerufen werden!  
U1 &FURTHER_SOURCES_OF_INF&                                                
AS                                                                         